// Logout app

{app, text, type Dispatch} from hyperapp
* as html from @hyperapp/html
APIDialog from ~/common/api_dialog.civet
bsIcon from ~/app/bs_icon.civet
csrf from ~/common/csrf.civet
{t} from ~/common/i18n.civet

interface LogoutState
  disabled: boolean

apiDialog := new APIDialog {
  id: "logout"
  name: "actions.logout"
  method: "DELETE"
  path: "/api/auth"
  responseMessageCodeList: [
    [200, {status: "success", message: "logout_succeeded", redirectTo: "/"}]
    [410, {status: "error", message: "logout_failed", reload: true}]
  ]
}

// Actions

Logout := (state: LogoutState, event: PointerEvent) ->
  if state.disabled
    state
  else
    [{...state, disabled: true}, logout()]

// Effecters

runLogout := (dispatch: Dispatch<LogoutState>) ->
  await apiDialog.submitPromise {data: csrf()}
  dispatch (state) -> ({...state, disabled: false})

// Effect Generotors

logout := ->
  runLogout

// App

init := {disabled: false}

view := (state: LogoutState) ->
  html.button {
    state.disabled
    onclick: Logout
  }, [
    bsIcon {name: "box-arrow-right", class: "flex-shrink-0 me-1"}
    html.span {class: "d-sm-none d-md-inline"}, text t("actions.logout")
  ]

export default logoutApp := ->
  if node? := document.getElementById("logout")
    console.debug "start logout app"
    app<LogoutState> {init, view, node}
