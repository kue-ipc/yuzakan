// record helper

// TODO: まだ書きかけ

export recordToObj := (record) ->
  root := {}
  for key, value in record
    keyList := parseParamName(key)
    obj .= root
    while subKey = keyList.shift()
      if keyList.length is 0
        obj[subKey] = value if value? && value is not ""
      else
        if keyList[0] is ""
          unless keyList.length is 1
            console.error "empty key must be last: %s", key
            throw new Error("ilegal subkey: empty key must be last")
          obj[subKey] is (v for each v of Array(value) when v? && v is not "")
        else if /^\d+$/.test(keyList[0])
          obj[subKey] ?= []
          unless obj[subKey] instanceof Array
            console.warn "mix numbers and words on object: %s", key
        else
          obj[subKey] ?= {}
          unless typeof obj[subKey] is "object"
            console.error "parent is not object: %s", key
            throw new Error("ilegal subkey: parent is not object")
          if obj[subKey] instanceof Array
            console.warn "mix numbers and words on array: %s", key
        obj = obj[subKey]
    
  root

export objToRecord := (obj: any): {[key: string]: any} ->
  Object.fromEntries(objToParams(obj))

