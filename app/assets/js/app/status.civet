{text} from hyperapp
* as html from @hyperapp/html
bsIcon from ~/app/bs_icon.civet
{t} from ~/common/i18n.civet

type Color
  | "primary"
  | "secondary"
  | "success"
  | "danger"
  | "warning"
  | "info"
  | "light"
  | "dark"
  | "body" 

interface Status
  name: string
  color: Color
  icon: string
  label?: string

STATUSES: Status[] := [
  // success or failure
  {name: "success", color: "success", icon: "check-circle-fill"}
  {name: "failure", color: "danger", icon: "x-circle-fill"}
  // log level
  {name: "debug", color: "secondary", icon: "bug-fill"}
  {name: "info", color: "info", icon: "info-square-fill"}
  {name: "warn", color: "warning", icon: "exclamation-triangle-fill"}
  {name: "error", color: "danger", icon: "exclamation-octagon-fill"}
  {name: "fatal", color: "danger", icon: "slash-circle-fill"}
  {name: "unknown", color: "primary", icon: "patch-question-fill"}
  // alert
  {name: "alert", color: "warning", icon: "bell-fill"}
  {name: "caution", color: "warning", icon: "exclamation"}
  {name: "warning", color: "warning", icon: "exclamation-triangle-fill"}
  {name: "danger", color: "danger", icon: "exclamation-diamond-fill"}
  // status
  {name: "waiting", color: "secondary", icon: "hourglass"}
  {name: "starting", color: "body", icon: "hourglass-top"}
  {name: "running", color: "primary", icon: "hourglass-slpit"}
  {name: "stopping", color: "body", icon: "hourglass-bottom"}
  {name: "stopped", color: "secondary", icon: "stop-fill"}
  {name: "succeeded", color: "success", icon: "check-circle-fill"}
  {name: "failed", color: "danger", icon: "x-circle-fill"}
  {name: "cancel", color: "warning", icon: "x"}
  {name: "errored", color: "danger", icon: "exclamation-octagon-fill"}
  {name: "timeout", color: "danger", icon: "clock-fill"}
  {name: "loading", color: "primary", icon: "spinner-border"}
  {name: "loaded", color: "secondary", icon: "stop-fill"}
]

STATUS_MAP: Map<string, Status> :=
  new Map(STATUSES.map((status) -> [status.name, status]))

unless DEFAULT_STATUS := STATUS_MAP.get("unknown")
  throw new Error "Not found unknown status"

statusLabel := (name: string): Promise<string> ->
  t(`statuses.${name}`)

export getStatus := (name: string): Promise<Status> ->
  status := STATUS_MAP.get(name) ?? DEFAULT_STATUS
  label := await statusLabel(name)
  {...status, label}

// Hyperapp View
export StatusIcon := ({status, class: klass = []}:
  {status: string | Status, class: string | string[]}) ->
  if typeof status is "string"
    status = await getStatus(status)

  if status.icon is in ["spinner-border", "spiner-grow"]
    html.div {class: [status.icon, klass], role: "status"},
      html.span {class: "visually-hidden"}, text status.label ?? status.name
  else
    html.div {class: [`text-${status.color}`, klass]},
      bsIcon {name: status.icon, alt: status.label ?? status.name, size: 32}
