import {text, ElementVNode} from "hyperapp"
import * as html from "@hyperapp/html"
import bsIcon from "~/app/bs_icon.civet"
import {t} from "~/common/i18n.civet"

type Status = {status: string, color: string, icon: string}

UNKNOWN_STATUS :=
  {status: "unknown", color: "primary", icon: "question-diamond-fill"}

STATUSES: Map<string, Status> := new Map([
  {status: "success", color: "success", icon: "check-circle-fill"}
  {status: "failure", color: "danger", icon: "x-circle-fill"}
  {status: "fatal", color: "danger", icon: "slash-circle-fill"}
  {status: "error", color: "danger", icon: "exclamation-octagon-fill"}
  {status: "warn", color: "warning", icon: "exclamation-triangle-fill"}
  {status: "info", color: "info", icon: "info-square-fill"}
  {status: "debug", color: "secondary", icon: "bug-fill"}
  {status: "alert", color: "danger", icon: "exclamation-triangle-fill"}
  {status: "caution", color: "warning", icon: "exclamation-triangle-fill"}
  UNKNOWN_STATUS
].map((status) -> [status.status, status]))

export StatusIcon := ({status, ...props}: any): Promise<ElementVNode<any>> ->
  if status is "running"
    label := await t("messages.now_loading")
    html.div {class: `spinner-border ${props.class}`, role: "status"},
      html.span {class: "visually-hidden"}, text label
  else
    {color, icon} := statusInfo(status)
    label := await t(`statuses.${status}`)
    html.div {class: `text-${color} ${props.class}`},
      bsIcon {name: icon, alt: label, size: 32}

export statusInfo := (status: string): Status ->
  STATUSES.get(status) ?? UNKNOWN_STATUS
