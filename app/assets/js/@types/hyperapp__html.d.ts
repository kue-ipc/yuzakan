type HtmlProps<S, C> = CustomPayloads<S, C> & Props<S>;
type HtmlChildren<S> = MaybeVNode<S> | readonly MaybeVNode<S>[];
type HtmlTag = <S, C = unknown>(props?: HtmlProps<S, C> | HtmlChildren<S>, children?: HtmlChildren<S>) =>
  ElementVNode<S>;

declare module '@hyperapp/html' {
  const a: HtmlTag;
  const b: HtmlTag;
  const i: HtmlTag;
  const p: HtmlTag;
  const q: HtmlTag;
  const s: HtmlTag;
  const br: HtmlTag;
  const dd: HtmlTag;
  const dl: HtmlTag;
  const dt: HtmlTag;
  const em: HtmlTag;
  const h1: HtmlTag;
  const h2: HtmlTag;
  const h3: HtmlTag;
  const h4: HtmlTag;
  const h5: HtmlTag;
  const h6: HtmlTag;
  const hr: HtmlTag;
  const li: HtmlTag;
  const ol: HtmlTag;
  const rp: HtmlTag;
  const rt: HtmlTag;
  const td: HtmlTag;
  const th: HtmlTag;
  const tr: HtmlTag;
  const ul: HtmlTag;
  const bdi: HtmlTag;
  const bdo: HtmlTag;
  const col: HtmlTag;
  const del: HtmlTag;
  const dfn: HtmlTag;
  const div: HtmlTag;
  const img: HtmlTag;
  const ins: HtmlTag;
  const kbd: HtmlTag;
  const map: HtmlTag;
  const nav: HtmlTag;
  const pre: HtmlTag;
  const rtc: HtmlTag;
  const sub: HtmlTag;
  const sup: HtmlTag;
  const wbr: HtmlTag;
  const abbr: HtmlTag;
  const area: HtmlTag;
  const cite: HtmlTag;
  const code: HtmlTag;
  const data: HtmlTag;
  const form: HtmlTag;
  const main: HtmlTag;
  const mark: HtmlTag;
  const ruby: HtmlTag;
  const samp: HtmlTag;
  const span: HtmlTag;
  const time: HtmlTag;
  const aside: HtmlTag;
  const audio: HtmlTag;
  const input: HtmlTag;
  const label: HtmlTag;
  const meter: HtmlTag;
  const param: HtmlTag;
  const small: HtmlTag;
  const table: HtmlTag;
  const tbody: HtmlTag;
  const tfoot: HtmlTag;
  const thead: HtmlTag;
  const track: HtmlTag;
  const video: HtmlTag;
  const button: HtmlTag;
  const canvas: HtmlTag;
  const dialog: HtmlTag;
  const figure: HtmlTag;
  const footer: HtmlTag;
  const header: HtmlTag;
  const iframe: HtmlTag;
  const legend: HtmlTag;
  const object: HtmlTag;
  const option: HtmlTag;
  const output: HtmlTag;
  const select: HtmlTag;
  const source: HtmlTag;
  const strong: HtmlTag;
  const address: HtmlTag;
  const article: HtmlTag;
  const caption: HtmlTag;
  const details: HtmlTag;
  const section: HtmlTag;
  const summary: HtmlTag;
  const picture: HtmlTag;
  const colgroup: HtmlTag;
  const datalist: HtmlTag;
  const fieldset: HtmlTag;
  const menuitem: HtmlTag;
  const optgroup: HtmlTag;
  const progress: HtmlTag;
  const textarea: HtmlTag;
  const blockquote: HtmlTag;
  const figcaption: HtmlTag;

  function text<T = unknown>(value: T extends symbol | ((..._: unknown[]) => unknown) ? never : T): TextVNode;
}

