// number helper

NumberValue ::= bigint | number | string | undefined

interface NumberRange
  min?: bigint | number
  max?: bigint | number

export normalizeBigint := (value: NumberValue, {min, max}: NumberRange = {}): bigint? ->
  return unless value?

  value = BigInt(value) unless value <? "bigint"
  if value < min? or value > max?
    console.warn "out of range: %i", value
    return 

  value

export normalizeNumber := (value: NumberValue, {min, max}: NumberRange = {}): number? ->
  return unless value?

  value = Number(value) unless value <? "number"
  if value < min? or value > max?
    console.warn "out of range: %f", value
    return 

  value
