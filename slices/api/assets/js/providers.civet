// /api/providers

import {
  createRunIndex
  createRunShowWithId
  createRunCreateWithId
  createRunUpdateWithId
  createRunDestroyWithId
} from '~api/hyper_json.civet'

import {pickType} from '~/common/helper.civet'

// Constants

export API_PROVIDERS = '/api/providers'

export PROVIDER_PROPERTIES = {
  name: 'string'
  display_name: 'string'
  adapter: 'string'
  order: 'integer'
  readable: 'boolean'
  writable: 'boolean'
  authenticatable: 'boolean'
  password_changeable: 'boolean'
  lockable: 'boolean'
  group: 'boolean'
  individual_password: 'boolean'
  self_management: 'boolean'
  description: 'string'
}

export INDEX_PROVIDERS_PARAM_TYPES = {
  has_group: 'boolean'
}

export SHOW_PROVIDER_PARAM_TYPES = {
}

export CREATE_PROVIDER_PARAM_TYPES = {
  ...PROVIDER_PROPERTIES
}

export UPDATE_PROVIDER_PARAM_TYPES = {
  ...PROVIDER_PROPERTIES
}

export DESTROY_PROVIDER_PARAM_TYPES = {
}

// Functions

export normalizeProviders = (providers, type = {}) ->
  normalizeProvider(provider, type) for provider in providers

export normalizeProvider = (provider, types = {}) ->
  pickType(provider, {
    ...PROVIDER_PROPERTIES
    params: 'map'
    ...types
  })

// Actiosn

export SetProviders = (state, providers) -> {
  ...state
  providers
}

export SetProvider = (state, provider) -> {
  ...state
  provider
}

// create Effecters

export createRunIndexProviders = (params = {}) ->
  createRunIndex({
    action: SetProviders
    normalizer: normalizeProviders
    url: API_PROVIDERS
    dataTypes: INDEX_PROVIDERS_PARAM_TYPES
    ...params
  })

export createRunShowProvider = (params = {}) ->
  createRunShowWithId({
    action: SetProvider
    normalizer: normalizeProvider
    url: API_PROVIDERS
    dataTypes: SHOW_PROVIDER_PARAM_TYPES
    ...params
  })

export createRunCreateProvider = (params = {}) ->
  createRunCreateWithId({
    action: SetProvider
    normalizer: normalizeProvider
    url: API_PROVIDERS
    dataTypes: CREATE_PROVIDER_PARAM_TYPES
    ...params
  })

export createRunUpdateProvider = (params = {}) ->
  createRunUpdateWithId({
    action: SetProvider
    normalizer: normalizeProvider
    url: API_PROVIDERS
    dataTypes: UPDATE_PROVIDER_PARAM_TYPES
    ...params
  })

export createRunDestroyProvider = (params = {}) ->
  createRunDestroyWithId({
    action: SetProvider
    normalizer: normalizeProvider
    url: API_PROVIDERS
    dataTypes: DESTROY_PROVIDER_PARAM_TYPES
    ...params
  })

// Effecters

export runIndexProviders = createRunIndexProviders()
export runShowProvider = createRunShowProvider()
export runCreateProvider = createRunCreateProvider()
export runUpdateProvider = createRunUpdateProvider()
export runDestroyProvider = createRunDestroyProvider()
