// /api/auth

{type Action, type Effecter} from hyperapp

{createShow, createCreate, createDestroy, type ActionOtherParams, type ResponseData, type ResponseState} from ~api/app_creator.civet

export interface AuthProps
  username: string
  password: string

// Contants

// create Actions
createSetAuth := <S>(effects?: Effect<S>[]) ->
  if effects? and effects# > 0
    (state: S, auth: AuthProps) ->
      [{...state, auth}, ...effects]
  else
    (state: S, auth: AuthProps) ->
      {...state, auth}

export createShowAuth := <S extends ResponseState>(
  {action?:: Action<S, AuthProps>,
  fallback?:: Action<S, ResponseData>,
  effects?:: Effecter<S>[]} = {},
  params: ActionOtherParams = {}
) ->
  createShow<S, AuthProps>("auth", {action, fallback}, params)

export createCreateAuth := <S extends ResponseState>(
  {action:: Action<S, AuthProps> = SetAuth,
  fallback?:: Action<S, ResponseData>} = {},
  params: ActionOtherParams = {}
) ->
  createCreate<S, AuthProps>("auth", {action, fallback}, params)

export createDestroyAuth := <S extends ResponseState>(
  {action:: Action<S, AuthProps> = SetAuth,
  fallback?:: Action<S, ResponseData>} = {},
  params: ActionOtherParams = {}
) ->
  createDestroy<S, AuthProps>("auth", {action, fallback}, params)

// Action

export ShowAuth := createShowAuth()
export CreateAuth := createCreateAuth()
export DestroyAuth := createDestroyAuth()
