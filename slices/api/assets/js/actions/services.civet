// /api/services

// TODO: 古い

{
  createRunIndex
  createRunShowWithId
  createRunCreateWithId
  createRunUpdateWithId
  createRunDestroyWithId
} from ~api/hyper_json.civet

{pickType} from ~/common/helper.civet

// Constants

export API_PROVIDERS := "/api/services"

export PROVIDER_PROPERTIES := {}
  name: "string"
  label: "string"
  adapter: "string"
  order: "integer"
  readable: "boolean"
  writable: "boolean"
  authenticatable: "boolean"
  password_changeable: "boolean"
  lockable: "boolean"
  group: "boolean"
  individual_password: "boolean"
  self_management: "boolean"
  description: "string"

export INDEX_PROVIDERS_PARAM_TYPES := {}
  has_group: "boolean"

export SHOW_PROVIDER_PARAM_TYPES := {}

export CREATE_PROVIDER_PARAM_TYPES := {}
  ...PROVIDER_PROPERTIES

export UPDATE_PROVIDER_PARAM_TYPES := {}
  ...PROVIDER_PROPERTIES

export DESTROY_PROVIDER_PARAM_TYPES := {}

// Functions

export normalizeServices := (services, type = {}) ->
  normalizeService(service, type) for each service of services

export normalizeService := (service, types = {}) ->
  pickType(service, {
    ...PROVIDER_PROPERTIES
    params: "map"
    ...types
  })

// Actiosn

export SetServices := (state, services) ->
  {
    ...state
    services
  }

export SetService := (state, service) ->
  {
    ...state
    service
  }

// create Effecters

export createRunIndexServices := (params = {}) ->
  createRunIndex({
    action: SetServices
    normalizer: normalizeServices
    url: API_PROVIDERS
    dataTypes: INDEX_PROVIDERS_PARAM_TYPES
    ...params
  })

export createRunShowService := (params = {}) ->
  createRunShowWithId({
    action: SetService
    normalizer: normalizeService
    url: API_PROVIDERS
    dataTypes: SHOW_PROVIDER_PARAM_TYPES
    ...params
  })

export createRunCreateService := (params = {}) ->
  createRunCreateWithId({
    action: SetService
    normalizer: normalizeService
    url: API_PROVIDERS
    dataTypes: CREATE_PROVIDER_PARAM_TYPES
    ...params
  })

export createRunUpdateService := (params = {}) ->
  createRunUpdateWithId({
    action: SetService
    normalizer: normalizeService
    url: API_PROVIDERS
    dataTypes: UPDATE_PROVIDER_PARAM_TYPES
    ...params
  })

export createRunDestroyService := (params = {}) ->
  createRunDestroyWithId({
    action: SetService
    normalizer: normalizeService
    url: API_PROVIDERS
    dataTypes: DESTROY_PROVIDER_PARAM_TYPES
    ...params
  })

// Effecters

export runIndexServices := createRunIndexServices()
export runShowService := createRunShowService()
export runCreateService := createRunCreateService()
export runUpdateService := createRunUpdateService()
export runDestroyService := createRunDestroyService()
