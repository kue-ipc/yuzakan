// /admin/user/*

{text, app} from hyperapp
* as html from @hyperapp/html

{pick, pickType, getBasenameFromUrl, getQueryParamsFromUrl, entityLabel} from ~/common/helper.civet

{fetchAPIGet} from ~api/fetch_api.civet

{runShowSystem} from ~api/system.civet
{runIndexServices} from ~api/services.civet
{runIndexGroupsNoSync} from ~api/groups.civet
{createRunIndexAttrs} from ~api/attrs.civet
{SHOW_USER_PARAM_TYPES, createRunShowUser} from ~api/users.civet

userInfo from ~admin/user_info.civet
userOperation from ~admin/user_operation.civet
userGroup from ~admin/user_group.civet
userService from ~admin/user_service.civet
userAttr from ~admin/user_attr.civet

{runGetUserWithInit} from ~admin/user_get_user.civet

{InitUserAttrs} from ~admin/user_attrs.civet

SetAttrsWithInit := (state, attrs) -> [InitUserAttrs, {attrs}]

// Effecters

// runIndexAttrsWithInit := createRunIndexAttrs({action: SetAttrsWithInit})
runIndexAttrsWithInit := createRunIndexAttrs()

// runIndexAttrsWithInit := createRunIndexAttrs({action: SetUserWithInit})
runShowUserWithInit := createRunShowUser()

main := ->
  id := getBasenameFromUrl(location)
  id := undefined if id is "*"
  mode := if id? then "show" else "new"

  queryParams := pickType(getQueryParamsFromUrl(location), SHOW_USER_PARAM_TYPES)

  init := [
    {mode, id, user: null, services: null, attrs: null, groups: null, system: null, option: queryParams}
    [runShowSystem]
    [runIndexServices]
    [runIndexGroupsNoSync]
    [runIndexAttrsWithInit]
    [runShowUserWithInit, {id}]
  ]

  view := ({mode, id, user, services, attrs, groups, system, option}) ->
    if mode is "none"
      return html.div {},
        html.strong {}, text "ユーザーが見つかりませんでした。"

    if mode is "new"
      return html.div {},
        html.strong {}, text "準備中です。"

    unless user? && services? && attrs? && groups? && system?
      return html.div {}, text "読込中..."

    html.div {}, [
      userInfo {mode, user, groups}
      userGroup {mode, user, groups}
      userOperation {mode, user}
      userService {mode, user, services}
      userAttr {mode, user, services, attrs}
    ]

  node := document.getElementById("user")

  app {init, view, node}

main()
