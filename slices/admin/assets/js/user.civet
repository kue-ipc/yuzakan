// /admin/user/*

import {text, app} from "hyperapp"
import * as html from "@hyperapp/html"

import {pick, pickType, getBasenameFromUrl, getQueryParamsFromUrl, entityLabel} from "~/common/helper.civet"

import {fetchJsonGet} from "~api/fetch_json.civet"

import {runShowSystem} from "~api/system.civet"
import {runIndexProviders} from "~api/providers.civet"
import {runIndexGroupsNoSync} from "~api/groups.civet"
import {createRunIndexAttrs} from "~api/attrs.civet"
import {SHOW_USER_PARAM_TYPES, createRunShowUser} from "~api/users.civet"

import userInfo from "~admin/user_info.civet"
import userOperation from "~admin/user_operation.civet"
import userGroup from "~admin/user_group.civet"
import userProvider from "~admin/user_provider.civet"
import userAttr from "~admin/user_attr.civet"

import {runGetUserWithInit} from "~admin/user_get_user.civet"

import {InitUserAttrs} from "~admin/user_attrs.civet"

SetAttrsWithInit := (state, attrs) -> [InitUserAttrs, {attrs}]

// Effecters

// runIndexAttrsWithInit := createRunIndexAttrs({action: SetAttrsWithInit})
runIndexAttrsWithInit := createRunIndexAttrs()

// runIndexAttrsWithInit := createRunIndexAttrs({action: SetUserWithInit})
runShowUserWithInit := createRunShowUser()

main := ->
  id := getBasenameFromUrl(location)
  id := undefined if id is "*"
  mode := if id? then "show" else "new"

  queryParams := pickType(getQueryParamsFromUrl(location), SHOW_USER_PARAM_TYPES)

  init := [
    {mode, id, user: null, providers: null, attrs: null, groups: null, system: null, option: queryParams}
    [runShowSystem]
    [runIndexProviders]
    [runIndexGroupsNoSync]
    [runIndexAttrsWithInit]
    [runShowUserWithInit, {id}]
  ]

  view := ({mode, id, user, providers, attrs, groups, system, option}) ->
    if mode is "none"
      return html.div {},
        html.strong {}, text "ユーザーが見つかりませんでした。"

    if mode is "new"
      return html.div {},
        html.strong {}, text "準備中です。"

    unless user? && providers? && attrs? && groups? && system?
      return html.div {}, text "読込中..."

    html.div {}, [
      userInfo {mode, user, groups}
      userGroup {mode, user, groups}
      userOperation {mode, user}
      userProvider {mode, user, providers}
      userAttr {mode, user, providers, attrs}
    ]

  node := document.getElementById("user")

  app {init, view, node}

main()
